heat_template_version: 2013-05-23

description: >
  A blueprint that defines the Open Three Tier pattern. This stack includes a high-availability Apache Tomcat proxy server, two load-balanced Apache HTTP servers, and a MySQL database.

parameters:
  authentication_user:
      type: string
      description: The user connecting to Salt API
      default: saltuser
 
  authentication_pass:
      type: string
      description: Password for connecting to Salt API
      hidden: True
      default: us3rpa88
      
  flavor:
    type: string
    description: Flavor to be used for compute instance
    default: "m1.small"
  
  environment:
    type: string
    description: The environment the nodes are part of
    default: three_tier_lamp
   
  salt_pillar:
    type: string
    description: Minion Pillar data
    default: '''{"service_port":"80","im_repo":"http://192.168.0.29/imrepo/","artifact_repo_root":"http://192.168.0.29/","mysql_password":"SomeP4ssw0rd"}'''

  image:
    type: string
    description: Generated
    default: '20ba0453-a0b2-4b44-9a50-2a308e3e939a'

  key_name:
    type: string
    description: Generated

  network_id_fbd19302-f247-4816-b53e-a664f3dc72c1:
    type: string
    description: Generated to reference 'patterns-service-dev-net' network.
    default: 'fbd19302-f247-4816-b53e-a664f3dc72c1'

  public_network_id:
    type: string
    description: Generated for floating IP
    default: 'TODO'
resources:
 
  rhel_server_one:
    type: OS::Nova::Server
    properties:
      networks:
          - port: { get_resource: server_one_fbd19302-f247-4816-b53e-a664f3dc72c1_port  }
      name: load balancer
      key_name: { get_param: key_name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      config_drive: "True"
      user_data_format: RAW
      user_data:
        get_resource: server_one_init
         
  
  server_one_init:
    type: OS::Heat::MultipartMime
    properties:
      parts:
      - config: {get_resource: bootstrap_salt}
      
  bootstrap_salt:
    type: "OS::Heat::SoftwareConfig"
    properties:
      config:
        str_replace:
          template: |
            #!/usr/bin/env bash
            chkconfig salt-minion on
            mkdir -p /etc/salt/pki/minion
     
            ### Minion Configuration 
            HOSTNAME=`hostname -s`
            DELIMITER="_"
            MINION_NAME=$HOSTNAME$DELIMITER$IDENTIFIER
            echo "master: 192.168.0.34" > /etc/salt/minion
            echo "id: $MINION_NAME" >> /etc/salt/minion
            echo "mine_functions: " >> /etc/salt/minion
            echo "  network.interfaces: []" >> /etc/salt/minion
            echo "  grains.items: []" >> /etc/salt/minion           
            ##### Minion license authenication with master 
            curl -Ssk https://192.168.0.34:8443/login -H 'Accept: application/x-yaml' -d username=$USER -d password=$PASS -d eauth=pam | awk '/token/ {printf $2}' > ~/token
            service salt-minion start
            sleep 30      
            curl -Ssk https://192.168.0.34:8443/hook/minions/key/accept -H 'Accept: application/x-yaml' -H "X-Auth-Token: `cat ~/token`" -d minion=$MINION_NAME
            rm -f ~/token           
          params:
            $USER: { get_param: authentication_user}
            $PASS: { get_param: authentication_pass}
            $IDENTIFIER: { get_param: 'OS::stack_name' }
    
          
  server_one_server_one_fbd19302-f247-4816-b53e-a664f3dc72c1_port_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_network_id }
      port_id: { get_resource: server_one_fbd19302-f247-4816-b53e-a664f3dc72c1_port }

  server_one_fbd19302-f247-4816-b53e-a664f3dc72c1_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: network_id_fbd19302-f247-4816-b53e-a664f3dc72c1 }


outputs:
  blueprint_url:
    description: Blueprint Origin URL
    value:  http://9.27.175.179:8080/landscaper/view/projects?open=ucdpadmin_00000000_0000_0000_0000_000000000002-OrionContent/default/open_tier_lamp/three_tier_lamp.yml
